@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<System.Collections.Generic.IEnumerable<ComicRackWebViewer.Series>>
<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-touch-fullscreen" content="yes" />
    <title>Series List</title>
    <link rel="stylesheet" href="/Comics/js/styling.css" type="text/css">
    <script type="text/javascript" src="/Comics/js/jquery-1.7.1.min.js"></script>
    <!-- This script shows/hides the corresponding object -->
    <script type="text/javascript">
    $(function () {
    
      // Remove empty letters
      $(".letter-body").each(function() { 
        if($(this).children().length < 1)  {
          $(this).prev().remove();
          $(this).remove();
        }
      });
      
    // hide all inital letters
    $(".letter-header").next().hide();
    
    // The function for toggling the groups
    $(".letter-header").click(function () {
      $(this).next().slideToggle('fast');
      });
    })
    </script>
</head>
<body>
    <!-- Fixed header + back button -->
    <div>
        <table style="border-spacing: 0px;">
            <tr>
                <th style="text-align: left; background-color: rgb(0, 0, 0); color: #ffcc00;">
                    <img style="width: 230px;" alt="CRLogo" src="/Comics/js/logo.png" align="middle">
                </th>
                <th style="text-align: center">SERIES LISTING</th>
                <td style="text-align: center" onclick="history.back(-1)">Back</td>
            </tr>
        </table>
    </div>
    <!-- Scrolling web contents -->
    <br>
    @{
        var LetterList = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        var Initials = "";
	
        <!-- List of the inital letter for all series	 -->
  
        foreach (var initial in @Model.OrderBy(x => x.Title).Where(x => !string.IsNullOrEmpty(x.Title)))
        {
            Initials += initial.Title.ElementAt(0);
        };
			
        <!-- Loop for Publishers in A-Z -->
        @for (int i = 0; i < 26; i = i + 1)
        {	
            <!-- See if any series starts with letter 'i' -->
			
            @if (Initials.IndexOf(LetterList.ElementAt(i)) != -1)
            {
                <!-- The Letter Header element -->
                <div class="letter-header" style="margin-top: 5px;">@LetterList.ElementAt(i)</div>

                <!-- I make a separate table for each line to add spacing between rows -->			
                <div id="@LetterList.ElementAt(i)" class="letter-body">
                @foreach (var item in @Model.OrderBy(x => x.Title).Where(x => !string.IsNullOrEmpty(x.Title)))
                {
                    @if (item.Title.ElementAt(0) == @LetterList.ElementAt(i))
                    {
                        <table> <tr> <table cellpadding="0" cellspacing="0" width="100%"> <tr> <td> <div
                        onclick="window.location='/Series/@item.Id/';">@item.Title (@item.Volume)</div>
                        </td> </tr> </table> </tr> </table>
                    <table> <tr></tr> </table>
                    }
                }
            </div>
            }
        }
	
        <!-- Now, add those Series starting by a number, a symbol, and comics with no Series -->
        <div class="letter-header" style="margin-top: 5px;">0-9</div>
        <div id="number" class="letter-body">
            @foreach (var item in @Model.OrderBy(x => x.Title).Where(x => !string.IsNullOrEmpty(x.Title)))
            {
                @if ("0123456789".IndexOf(item.Title.ElementAt(0)) != -1)
                {
                    <table> <tr> <table cellpadding="0" cellspacing="0" width="100%"> <tr> <td> <div
                    onclick="window.location='/Series/@item.Id/';">@item.Title (@item.Volume)</div>
                </td> </tr> </table> </tr> <table> <tr></tr> </table> </table>
                }
            }
        </div>
	
        <!-- Series starting with symbols -->
        <div class="letter-header" style="margin-top: 5px;">!</div>
        <div id="symbol" class="letter-body">
            @foreach (var item in @Model.OrderBy(x => x.Title).Where(x => !string.IsNullOrEmpty(x.Title)))
            {
                @if ("ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789".IndexOf(item.Title.ElementAt(0)) == -1)
                {
                    <table> <tr> <table cellpadding="0" cellspacing="0" width="100%"> <tr> <td> <div
                    onclick="window.location='/Series/@item.Id/';">@item.Title (@item.Volume)</div>
                </td> </tr> </table> </tr> </table>
                }
            }
        </div>
	
	
	
    }
    <br>
    <div>
        <table style="border-spacing: 0px;">
            <tr>
                <th style="text-align: left; background-color: rgb(0, 0, 0); color: #ffcc00;">
                    <img style="width: 230px;" alt="CRLogo" src="/Comics/js/logo.png" align="middle">
                </th>
                <th style="text-align: center">SERIES LISTING</th>
                <td style="text-align: center" onclick="history.back(-1)">Back</td>
            </tr>
            <table>
    </div>
</body>
</html>
